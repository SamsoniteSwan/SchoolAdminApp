/*
 * Jeremy Swanson
 * Property of / therein / so forth
 */
package views;

import utilities.NoDataException;
import baseclasses.Classroom;
import java.awt.Component;
import java.util.ArrayList;
import utilities.Clearable;

/**
 *
 * @author swans_000
 */
public class PanelNewClassroom extends javax.swing.JPanel implements Clearable {

    /**
     * Creates new form NewClassroomPanel
     */
    public PanelNewClassroom() {
        initComponents();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtRoomNumber = new javax.swing.JTextField();
        lblRoomNumber = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        lstStatus = new javax.swing.JList();

        txtRoomNumber.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));

        lblRoomNumber.setLabelFor(txtRoomNumber);
        lblRoomNumber.setText("Room Number:");

        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblStatus.setText("Room Type:");

        btnAdd.setFont(new java.awt.Font("Aharoni", 0, 13)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(0, 90, 150));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lstStatus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        lstStatus.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "lab", "classroom", "lecture hall" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstStatus.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblRoomNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lstStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRoomNumber))
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                .addGap(140, 140, 140))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRoomNumber))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lstStatus)
                    .addComponent(lblStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        

        try{
            checkFields();
            Classroom o = new Classroom();
            o.setRoomNumber(txtRoomNumber.getText());
        
            char status = '\0'; // default to null char
            switch ((String)lstStatus.getSelectedValue()) {
                case "lab": status = 'L';
                    break;
                case "classroom": status = 'C'; 
                    break;
                case "lecture hall": status = 'H'; 
                    break;
            }
            o.setStatus(status);

            // add the object to the ArrayList, then clear the form
            if(WindowMain.dataBox.getClassrooms().add(o) == true){        
                WindowMain.dataBox.hasNewData = true; // trigger newData bool
                clearData();
        }
        } catch (NoDataException e) {
            e.promptForFields();
        }
        
    }//GEN-LAST:event_btnAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JLabel lblRoomNumber;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JList lstStatus;
    private javax.swing.JTextField txtRoomNumber;
    // End of variables declaration//GEN-END:variables

    @Override
    public void clearData() {
        txtRoomNumber.setText(null);
        lstStatus.clearSelection();
    }
    
    public void checkFields() throws NoDataException {
        
        ArrayList<String> fieldNames = new ArrayList();
        
        if (txtRoomNumber.getText().equals("")){
            fieldNames.add("Room Number");           
        }
        if (lstStatus.getSelectedValuesList().size() < 1) {
            fieldNames.add("Room Type");
        }

        if (fieldNames.size() > 0) 
            throw new NoDataException(fieldNames);
            
        
    }

    @Override
    public Component[] clearableItems() {
        return new Component[]{txtRoomNumber};
    }
}
