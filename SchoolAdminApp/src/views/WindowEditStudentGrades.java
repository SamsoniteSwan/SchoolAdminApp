/*
 * Jeremy Swanson
 * Property of / therein / so forth
 */
package views;

import baseclasses.Student;
import baseclasses.StudentClass;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import utilities.RendererCourseList;
import utilities.DataContainer;
import utilities.HandlerButton;
import utilities.ModelMyComboBox;
import utilities.ModelMyList;
import utilities.RendererStudentList;

/**
 *
 * @author swans_000
 */
public class WindowEditStudentGrades extends javax.swing.JFrame implements java.awt.event.ActionListener{

    /**
     * Creates new form WindowEditStudentGrades.
     * NOTE: Uses 2 slightly different Action styles:
     * A. Implements ActionListener for close button.
     * B. Adds ItemListener directly to combobox.
     */
    public WindowEditStudentGrades() {
        this(WindowMain.dataBox);
    }
    
    public WindowEditStudentGrades(DataContainer dc) {
        initComponents();
        myInit();
        
        ArrayList<Student> studs = WindowMain.dataBox.getStudents();
        
        ModelMyComboBox cmbModel = new ModelMyComboBox(studs);
        cmbSelectStudent.setModel(cmbModel);

        for(Student st : studs){
            cmbSelectStudent.addItem(st);
        }
        
        cmbSelectStudent.setSelectedItem(null);
        
        
        // B(1)
        // Add listener to combobox to listen when value is changed
       cmbSelectStudent.addItemListener(new java.awt.event.ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                comboChangeAction(e);
            }
       });
       
       lstClasses.addListSelectionListener(new CourseListSelectionHandler());
       lstGrades.addListSelectionListener(new GradeListSelectionHandler());

       lblDisplayNameForClasses.setVisible(false);
       
       // A(1)
       cmdNewGrade.setActionCommand("AddGrade");
       cmdNewGrade.addActionListener(this);

       
       visibilitySwitch("");  
        
    }
    
    private void myInit() {
        // prevent Java from closing out completely
        setDefaultCloseOperation(DISPOSE_ON_CLOSE); 
        
        HandlerButton hb = new HandlerButton(this);
        cmdClose.setActionCommand("Close");
        cmdClose.addActionListener(hb);
        cmdSaveChange.setActionCommand("ChangeGrade");
        cmdSaveChange.addActionListener(hb);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbSelectStudent = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstClasses = new javax.swing.JList();
        cmdClose = new javax.swing.JButton();
        lblStudent = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstGrades = new javax.swing.JList();
        lblDisplayNameForClasses = new javax.swing.JLabel();
        txtChangeGrade = new javax.swing.JTextField();
        txtNewGrade = new javax.swing.JTextField();
        cmdSaveChange = new javax.swing.JButton();
        cmdNewGrade = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmbSelectStudent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lstClasses.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lstClasses);

        cmdClose.setText("Close");

        lblStudent.setText("Select student");

        lstGrades.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(lstGrades);

        lblDisplayNameForClasses.setText("Classes:");

        txtChangeGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChangeGradeActionPerformed(evt);
            }
        });

        cmdSaveChange.setText("Change");
        cmdSaveChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveChangeActionPerformed(evt);
            }
        });

        cmdNewGrade.setText("AddNew");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStudent)
                            .addComponent(cmbSelectStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(112, 112, 112)
                        .addComponent(cmdClose))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(txtChangeGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmdSaveChange))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(txtNewGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmdNewGrade)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblDisplayNameForClasses, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)))
                .addGap(63, 63, 63))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblStudent)
                        .addGap(7, 7, 7)
                        .addComponent(cmbSelectStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(cmdClose)))
                .addGap(24, 24, 24)
                .addComponent(lblDisplayNameForClasses)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtChangeGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(cmdSaveChange))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNewGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(cmdNewGrade)))))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdSaveChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveChangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdSaveChangeActionPerformed

    private void txtChangeGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChangeGradeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChangeGradeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WindowEditStudentGrades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WindowEditStudentGrades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WindowEditStudentGrades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WindowEditStudentGrades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WindowEditStudentGrades().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbSelectStudent;
    private javax.swing.JButton cmdClose;
    private javax.swing.JButton cmdNewGrade;
    private javax.swing.JButton cmdSaveChange;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDisplayNameForClasses;
    private javax.swing.JLabel lblStudent;
    private javax.swing.JList lstClasses;
    private javax.swing.JList lstGrades;
    private javax.swing.JTextField txtChangeGrade;
    private javax.swing.JTextField txtNewGrade;
    // End of variables declaration//GEN-END:variables

    // B(2)
    private void comboChangeAction(java.awt.event.ItemEvent a) {
        // Change listbox based on combobox selection value

        visibilitySwitch("cmbSelectStudent");
        lstClasses.clearSelection();
        lstClasses.removeAll();
        
        lstGrades.clearSelection();
        lstGrades.removeAll();
        
        Student selected = (Student)cmbSelectStudent.getSelectedItem();
        
        ModelMyList listM = new ModelMyList(selected.getClasses());
        lstClasses.setModel(listM);
        lstClasses.setCellRenderer(new RendererCourseList());
        
        lblDisplayNameForClasses.setText(selected.getName() + "'s Classes:");
        lblDisplayNameForClasses.setVisible(true);
        
    }
    
    // A(2)
    @Override
    public void actionPerformed(ActionEvent evnt) {
        
        StudentClass classSelected;
        ArrayList<Float> grades;
        ModelMyList listM;
           switch (evnt.getActionCommand()){
                
                case "AddGrade":
                    
                    classSelected = (StudentClass) lstClasses.getSelectedValue();                    
                    classSelected.getGrades().add(Float.parseFloat(txtNewGrade.getText()));
                    
                    grades = classSelected.getGrades();
                    listM = new ModelMyList(grades);
                    lstGrades.setModel(listM);
                    txtNewGrade.setText(""); // clear data field
                    txtNewGrade.requestFocusInWindow(); // set focus back to data field
                    
                    break;
                    
                case "ChangeGrade":
                    /*
                    classSelected = (StudentClass) lstClasses.getSelectedValue();
                    //grades = classSelected.getGrades();
                    Object sel = (Float)lstGrades.getSelectedValue();
                    sel = Float.parseFloat(txtChangeGrade.getText());
                    //grades.set(lstClasses.getSelectedIndex(), Float.parseFloat(txtChangeGrade.getText()));
                    //grades.remove((Float)lstGrades.getSelectedValue());
                    //grades.add(Float.parseFloat(txtChangeGrade.getText()));
                    
                    
                    // Refresh lstGrades
                    //lstGrades.removeAll();
                    grades = classSelected.getGrades();
                    listM = new ModelMyList(grades);
                    lstGrades.setModel(listM);                  
                    txtChangeGrade.setText("");
                    */
                    break;
           }
    }
    
    private class CourseListSelectionHandler implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            
            if(lstClasses.getSelectedValue() != null){
                StudentClass classSelected = (StudentClass) lstClasses.getSelectedValue();
                ArrayList<Float> grades = classSelected.getGrades();
            
                ModelMyList listM = new ModelMyList(grades);
                lstGrades.setModel(listM);
                visibilitySwitch("lstClasses");
            }
            
        }
        
    }
    
    private class GradeListSelectionHandler implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            visibilitySwitch("lstGrades");
        }
        
    }
    
    private void visibilitySwitch(String fldName) {
        switch(fldName){
            
            case "lstGrades":
                txtChangeGrade.setVisible(true);
                cmdSaveChange.setVisible(true);
                
                
                if (lstGrades.getSelectedValuesList().size()> 0){
                    txtChangeGrade.setText(lstGrades.getSelectedValue().toString());
                }
                //txtNewGrade.setText("");                
                break;
                
            case "lstClasses":
                lstGrades.setVisible(true);
                txtNewGrade.setVisible(true);
                cmdNewGrade.setVisible(true);
                cmdSaveChange.setVisible(false);
                txtChangeGrade.setVisible(false);
                break;
                
            case "cmbSelectStudent":
                lstClasses.setVisible(true);

            default:
                lstGrades.setVisible(false);
                txtNewGrade.setVisible(false);
                cmdNewGrade.setVisible(false);
                txtChangeGrade.setVisible(false);
                cmdSaveChange.setVisible(false);
        }
    }

}
